---
- name: Install, Configure, and Start Nexus on Ubuntu
  become: yes
  hosts: all
  gather_facts: yes
  tasks:
    # Step 1: Create required directories for JDK and Nexus software
    - name: Create directories for JDK and Nexus
      ansible.builtin.file:
        path: "{{ item.dest }}"
        state: directory
        mode: 0775
        recurse: true
      loop:
        - { dest: '/opt/jdk8', message: jdk_folder_created }
        - { dest: '/opt/nexus_software', message: nexus_folder_created }

    # Step 2: Install OpenJDK 8
    - name: Install OpenJDK 8
      ansible.builtin.apt:
        name: openjdk-8-jdk
        state: present
        update_cache: yes

    # Step 3: Download Nexus software from Sonatype
    - name: Download Nexus software
      ansible.builtin.get_url:
        url: https://download.sonatype.com/nexus/3/nexus-3.45.0-01-unix.tar.gz
        dest: /opt/nexus_software

    # Step 4: Unarchive the Nexus tarball
    - name: Unarchive Nexus software
      ansible.builtin.unarchive:
        src: /opt/nexus_software/nexus-3.45.0-01-unix.tar.gz
        dest: /opt
        remote_src: yes

    # Step 5: Create the Nexus user
    - name: Create Nexus user
      ansible.builtin.user:
        name: nexus
        create_home: yes
        state: present

    # Step 6: Add Nexus user to sudoers file with passwordless sudo permissions
    - name: Add Nexus user to sudoers
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        line: 'nexus ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

    # Step 7: Set ownership and permissions for Nexus directories
    - name: Change ownership and permissions for Nexus
      ansible.builtin.file:
        path: "{{ item.perms }}"
        owner: nexus
        group: nexus
        mode: 0775
        recurse: true
      loop:
        - { perms: '/opt/nexus-3.45.0-01' }
        - { perms: '/opt/sonatype-work' }

    # Step 8: Update the nexus.rc file to run as the Nexus user
    - name: Update nexus.rc file to set Nexus run user
      ansible.builtin.replace:
        path: /opt/nexus-3.45.0-01/bin/nexus.rc
        regexp: '^#run.*$'
        replace: 'run_as_user="nexus"'
        backup: yes

    # Step 9: Create a symbolic link to Nexus service script
    - name: Create a symbolic link for Nexus service
      ansible.builtin.file:
        src: /opt/nexus-3.45.0-01/bin/nexus
        dest: /etc/init.d/nexus
        state: link

    # Step 10: Create systemd service file for Nexus (optional but recommended)
    - name: Copy Nexus systemd service file
      ansible.builtin.template:
        src: nexus.service  # Ensure you have a nexus.service file ready in your template folder
        dest: /etc/systemd/system/nexus.service

    # Step 11: Reload systemd and start Nexus service
    - name: Start and enable Nexus service
      ansible.builtin.service:
        name: nexus
        enabled: yes
        state: started
        daemon_reload: true
    # Step 12: Retrieve and print the Nexus admin password using 'cat'
    - name: Retrieve Nexus admin password
      # ansible.builtin.command
      command: cat /opt/sonatype-work/nexus3/admin.password
      register: nexus_admin_password

    - name: Print the Nexus admin password
      debug: #ansible.builtin.debug
        msg: "The Nexus admin password is: {{ nexus_admin_password.stdout }}"